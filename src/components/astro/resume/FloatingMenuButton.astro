---
import { getLocaleUrl } from "astro-i18n-aut";
import { getLocale } from "astro-i18n-aut";

interface Props {
    accentColor: string;
}

const { accentColor } = Astro.props;
const baseUrl = import.meta.env.BASE_URL;
const locale = getLocale(Astro.url);
---

<div id="floatingMenu" class="floating-menu">
    <nav class="menu">
        <div class="menu-items">
            <a href="#hero" class="menu-item">TOP</a>
            <a href="#intro" class="menu-item"> Intro</a>
            <a href="#skills" class="menu-item"> Skills</a>
            <a href="#certifications" class="menu-item" data-text="Certifications"> Certifications</a>
            <a href="#experience" class="menu-item"> Experience</a>
        </div>
    </nav>
    <div class="bottom-bar">
        <a href={getLocaleUrl("/", locale)} rel="prefetch" aria-label="Go home" title="Home page" class="bottom-bar-item home-button">
            <i class="gg-home"></i>
        </a>
        <button aria-label="Open menu" title="Menu" class="bottom-bar-item menu-button">
            <i class="gg-menu"></i>
        </button>
    </div>
</div>

<style define:vars={{ accentColor }}>
    .floating-menu {
        position: fixed;
        display: flex;
        justify-content: center;
        align-items: center;
        width: 60px;
        height: 60px;
        bottom: 20px;
        right: 20px;
        background-color: var(--card-color);
        color: #fff;
        border-radius: 50%;
        font-size: 30px;
        border: 1px solid rgba(255, 255, 255, 0.2);
        z-index: 2000;
        transition:
            width 400ms ease-in-out,
            height 400ms ease-in-out,
            border-radius 400ms ease-in-out,
            border 200ms ease-in-out;

        @media (max-width: 500px) {
            bottom: 15px;
            right: 15px;
        }

        &:hover {
            border: 1px solid rgba(var(--accentColor), 1);
        }

        &.active {
            height: 250px;
            width: 180px;
            border-radius: 10px;
            justify-content: unset;
            align-items: unset;
            display: grid;
            grid-template-rows: 1fr min-content;
            border: 1px solid rgba(var(--accentColor), 1);

            & .menu {
                display: block;
            }

            & .bottom-bar .home-button {
                display: flex;
            }
        }
    }

    .menu {
        padding: 1rem 1rem 1rem 0rem;
        list-style: none;
        font-size: 1rem;
        display: none;
        animation-name: fadeIn;
        animation-duration: 400ms;
        animation-fill-mode: forwards;
        animation-timing-function: ease-in-out;
        animation-delay: 200ms;
        opacity: 0; /* Gets animated */
    }

    .menu-items {
        padding-left: 1rem;
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        gap: 1rem;
        height: 90%;
        text-transform: uppercase;
        z-index: 2010;
    }

    .menu-item {
        position: relative;
        color: white;
        &:hover {
            text-decoration: none;
        }
    }

    .menu-item::after {
        background-color: rgba(var(--accentColor), 1);
        content: "";
        z-index: 2020;
        width: 100%;
        height: 1px;
        position: absolute;
        left: 0;
        bottom: 0;
        transform-origin: center;
        transform: scaleX(0);
        transition: transform 200ms ease-in-out;
    }

    .menu-item:hover::after {
        transform: scaleX(1);
    }

    .bottom-bar {
        display: flex;
        padding: 1rem;
        justify-content: space-between;
        align-content: center;
    }

    .bottom-bar-item {
        width: 35px;
        height: 35px;
        display: flex;
        justify-content: center;
        align-items: center;

        &.home-button {
            display: none;
            animation-name: fadeIn;
            animation-duration: 400ms;
            animation-fill-mode: forwards;
            animation-timing-function: ease-in-out;
            animation-delay: 200ms;
            opacity: 0; /* Gets animated */
        }

        & i {
            color: rgba(var(--accentColor), 1);
            transition: all 300ms ease-in-out;
        }

        &:hover {
            cursor: pointer;
        }
    }

    .menu-button {
        position: absolute;
        right: 12px;
        bottom: 12px;
    }
</style>

<script>
    const openCloseMenu = () => {
        const button = document.querySelector(".menu-button");
        const menu = document.getElementById("floatingMenu");

        button?.addEventListener("click", (e) => {
            e.preventDefault();

            menu?.classList.toggle("active");
        });
    };

    document.addEventListener(
        "astro:page-load",
        (e) => {
            openCloseMenu();
        },
        { once: false },
    );
</script>
