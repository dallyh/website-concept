---
import Layout from "../layouts/Layout.astro";
import i18n, { loadNamespaces, t } from "../i18n/i18n";
import type { ContactForm as ContactFormRes } from "../i18n/locales";
import { getLocaleUrl, getLocale } from "astro-i18n-aut";
import Footer from "../components/astro/footer/Footer.astro";
import Intro from "../components/astro/parts/Intro.astro";
import Projects from "../components/astro/parts/Projects.astro";
import Contact from "../components/astro/parts/Contact.astro";

// i18next
const locale = getLocale(Astro.url);
const namespaces = ["landing"];
namespaces.push("contactForm", "shared", "landing");
namespaces.push("landing", "projects");

await loadNamespaces(locale, namespaces);

const res: ContactFormRes = i18n?.getResourceBundle(locale, "contactForm");
---
<Layout title="Dalibor Hon">
    <main>
        <section class="intro">
            <div class="section-content-container">
                <Intro />
            </div>
            <div class="section-footer first-section">
                <div class="mouse" id="mouse">
                    <div class="mouse-wheel"></div>
                    <div class="arrows"></div>
                </div>
            </div>
        </section>
        <section class="projects">
            <div class="section-content-container">
                <div class="section-header">
                    <h3 data-text={t("landing:projects_title")}>{t("landing:projects_title")}</h3>
                </div>
                <div class="section-info">
                    <p>A list of my personal hobby projects</p>
                </div>
                <div class="section-content">
                    <Projects />
                </div>
            </div>
        </section>
        <section class="contact" id="contact">
            <div class="section-content-container">
                <div class="section-header">
                    <h3 data-text={t("shared:LeaveMeAMessage")}>{t("shared:LeaveMeAMessage")}</h3>
                </div>
                <div class="section-info">
                    <p>{t("contactForm:ContactMe")}</p>
                </div>
                <div class="section-content">
                    <Contact />
                </div>
            </div>
        </section>
    </main>
    <Footer showContact={false} showHomePage={false} accentColor="var(--accent)" />
</Layout>

<style>
    main {
        max-width: var(--page-width);
        margin: auto;
        display: flex;
        flex-direction: column;
    }

    section {
        display: grid;

        @media (max-width: 768px) {
            height: unset;
        }

        &.intro {
            height: 100svh;
            grid-template-rows: 1fr min-content;
            justify-content: center;
            align-items: center;
        }
    }

    .section-content-container {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: flex-start;
        padding: 4rem 4rem 1rem 4rem;

        @media (max-width: 768px) {
            padding: 2rem;
        }

        @media (max-width: 480px) {
            padding: 0.7rem;
        }

        .section-header {
            font-size: 2rem;
            font-weight: 600;
            position: relative;
            z-index: 1;

            &::before {
                content: "";
                width: 100%;
                height: 2px;
                position: absolute;
                background-color: rgba(var(--accent), 1);
                bottom: -2px;
                z-index: -1;
            }
        }

        [data-text]::after {
            content: attr(data-text);
            width: 100%;
            height: 100%;
            color: rgba(var(--accent), 0.8);
            position: absolute;
            top: 2px;
            left: 2px;
            font-size: 2rem;
            z-index: -1;
        }
        .section-info {
            margin-top: 10px;
        }

        .section-content {
            margin-top: 1rem;
            width: 100%;
            height: 100%;
        }
    }

    .section-footer {
        width: 100%;
        height: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
        padding-bottom: 1rem;

        .mouse {
            opacity: 0.4;
            width: 30px;
            height: 50px;
            border: 2px solid white;
            border-radius: 35px;
            position: relative;
        }

        .mouse-wheel {
            position: relative;
            overflow: hidden;
            width: 30px;
            height: 15px;
            border: 1px solid white;
            width: 6px;
            border-radius: 500px;
            margin: 5px auto 0;
            margin-top: 5px;
        }

        .mouse-wheel::after {
            content: "";
            position: absolute;
            width: 4px;
            background-color: #fff;
            height: 4px;
            left: 50%;
            margin-left: -2px;
            border-radius: 15px;
            animation: mouseScroll 1.5s 000ms infinite ease;
        }

        .arrows {
            width: 26px;
            height: 20px;
            overflow: hidden;
            margin-top: -5px;
        }

        .arrows-container {
            overflow: hidden;
            position: relative;
        }

        .arrows {
            position: absolute;
            left: 13px;
            overflow: hidden;
            transform: rotate(45deg);
            margin-left: -5px;
            content: "";
            opacity: 0;
            width: 10px;
            height: 10px;
            border: 2px solid white;
            border-left-color: transparent;
            border-top-color: transparent;
            animation: arrowScroll 1.5s 500ms ease-in-out infinite;
        }
    }
</style>

<script>
    const hideMouse = () => {
        const mouseElem = document.getElementById("mouse") as HTMLElement;
        const maxScroll = 550;
        const initialOpacity = Number(window.getComputedStyle(mouseElem).opacity) ?? 1;

        document.addEventListener("scroll", (e) => {
            let opacity = initialOpacity - window.scrollY / maxScroll;
            mouseElem.style.opacity = opacity.toString();

            if (opacity <= 0) {
                mouseElem.style.display = "none";
            } else {
                mouseElem.style.display = "block";
            }
        });
    };
    document.addEventListener(
        "astro:page-load",
        (e) => {
            hideMouse();
        },
        { once: false },
    );
</script>
