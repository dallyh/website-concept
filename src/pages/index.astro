---
import Layout from "../layouts/Layout.astro";
import { loadNamespaces, t } from "../i18n/i18n";
import { getLocale, getLocaleUrl, localeKeys } from "astro-i18n-aut";
import LanguageSelector from "../components/astro/footer/LanguageSelector.astro";
import { fade } from "astro:transitions";

// i18next
const locale = getLocale(Astro.url);
const namespaces = ["landing"];
await loadNamespaces(locale, namespaces);

const welcomes = localeKeys.map((key) => {
    return t("landing:welcome", { lng: key });
});
const colors = ["accent", "accent-resume"];
let color = 0;
---

<Layout title="Dalibor Hon">
    <main>
        <div class="welcomes-container">
            <div class="welcome">
                <span class="accent">Welc</span>
                <div class="lds-ring index">
                    <div></div>
                    <div></div>
                    <div></div>
                    <div></div>
                </div>
                <span class="accent">me!</span>
            </div>
        </div>
    </main>
</Layout>

<style>
    body {
        width: 100vw;
        height: 100vh;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
    }

    main {
        width: 100%;
        height: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
        gap: 1rem;

        &.fade-out {
            animation: fadeOut 500ms ease-out forwards;
        }
    }

    .go-home {
        font-size: 1rem;
    }

    .welcomes-container {
        font-size: 4rem;
        font-weight: 800;
        position: relative;
        opacity: 1;
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;

        .welcome {
            width: max-content;
            display: flex;

            .accent {
                color: rgba(var(--accent), 1);
            }
        }
    }

    .lds-ring.index {
        margin-top: 20px;
        margin-left: 4px;
        margin-right: 2px;
        --width: 38px;
        --height: 38px;
        width: var(--width);
        height: var(--height);
    }

    .lds-ring.index div {
        width: var(--width);
        height: var(--height);
        border: 6px solid #fff;
        border-color: rgba(var(--accent-resume), 1) transparent transparent transparent;
    }
</style>

<script>
    import { navigate } from "astro:transitions/client";
    import { getLocaleUrl } from "astro-i18n-aut";
    import { prefetch } from "astro:prefetch";

    const redirectUser = (lang: string) => {
        console.debug("Navigating by language: '" + lang + "'");
        switch (lang) {
            case "cs":
                let url = getLocaleUrl("/home/", "cs");
                prefetch(url, { with: "fetch" });
                navigate(url);
                break;
            case "sk":
                navigate(getLocaleUrl("/home/", "cs"));
                break;
            case "en":
                navigate(getLocaleUrl("/home/", "en"));
                break;
            default:
                navigate(getLocaleUrl("/home/", "cs"));
                break;
        }
    };

    const checkDebug = (): boolean => {
        const queryString = window.location.search;
        if (queryString) {
            const urlParams = new URLSearchParams(queryString);
            if (urlParams.has("debug")) {
                console.log("Page running in debug mode...");
                return true;
            }
        }

        return false;
    };

    const navigateUser = () => {
        if (checkDebug()) return;

        let languagePreference = window.localStorage.getItem("language");
        if (languagePreference) {
            redirectUser(languagePreference);
            return;
        }

        let navigatorLanguages = navigator.languages;
        for (let lang of navigatorLanguages) {
            if (lang.includes("-")) {
                lang = lang.split("-")[0];
            }
            redirectUser(lang);
            break;
        }
    };

    const loadComplete = (callback: () => void) => {
        if (checkDebug()) return;
        const main = document.querySelector<HTMLElement>("main");
        main?.addEventListener("animationend", (e) => {
            callback();
            console.log("ended");
        });
        main?.classList.add("fade-out");
    };

    document.addEventListener(
        "astro:page-load",
        () => {
            loadComplete(() => {
                navigateUser();
            });
        },
        { once: true },
    );
</script>
