---
import Layout from "../../layouts/Layout.astro";
import { loadNamespaces, t } from "../../i18n/i18n";
import { getLocale } from "astro-i18n-aut";
import Footer from "../../components/astro/footer/Footer.astro";
import Banner from "../../components/astro/Banner.astro";
import { Image } from "astro:assets";

// Images
import Lemmy from "../../assets/img/projects/lemmy.svg"

const accentColor = "var(--accent-projects)";

// i18next
const locale = getLocale(Astro.url);
const namespaces = ["landing", "projects"];
await loadNamespaces(locale, namespaces);
---

<Layout title={`Dalibor Hon - ${t("landing:projects_title")}`}>
    <main>
        <div class="cards-wrapper">
            <div class="banner-wrapper" transition:name="banner">
                <Banner accentColor={accentColor} style="projects" />
            </div>
            <div class="cards">
                <div class="card">
                    <div class="card-content">
                        <div class="card-image">
                            <i class="bi bi-globe"></i>
                        </div>
                        <div class="card-info-wrapper">
                            <div class="card-info">
                                <i class="bi bi-link-45deg"></i>
                                <div class="card-info-title">
                                    <a href="#" target="_blank">{t("projects:ThisWebsite")}</a>
                                    <p>{t("projects:ThisWebsiteDescription")}</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card">
                    <div class="card-content">
                        <div class="card-image">
                            <Image class="lemmy-logo" src={Lemmy} width={100} format="avif" alt="Profile picture"/>
                        </div>
                        <div class="card-info-wrapper">
                            <div class="card-info">
                                <i class="bi bi-link-45deg"></i>
                                <div class="card-info-title">
                                    <a href="https://github.com/dallyh/lemmy-kt-client" target="_blank">{t("projects:LemmyKtClient")}</a>
                                    <p>{t("projects:LemmyKtClientDescription")}{" "}<a href="https://join-lemmy.org/" target="_blank">Lemmy</a></p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card">
                    <div class="card-content">
                        <div class="card-image">
                            <i class="bi bi-file-person-fill"></i>
                        </div>
                        <div class="card-info-wrapper">
                            <div class="card-info">
                                <i class="bi bi-link-45deg"></i>
                                <div class="card-info-title">
                                    <a href="https://github.com/dallyh/web-resume" target="_blank">{t("projects:OldWebsite")}</a>
                                    <p>{t("projects:OldWebisteDescription")}</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <Footer accentColor={accentColor} />
    </main>
</Layout>

<style define:vars={{ accentColor }}>
    :root {
        --nav-background: #222831;
        --container-width: 950px;
        --container-height: 400px;
    }

    body {
        height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    a {
        color: rgba(var(--accentColor), 1);

        &:visited {
            color: rgba(var(--a-visited), 1);
        }
    }

    .cards-wrapper {
        width: var(--container-width);
        height: var(--container-height);
        background-color: var(--nav-background);
        border-radius: 15px;
        border: 1px solid rgba(255, 255, 255, 0.1);
        display: flex;
        flex-direction: column;
        gap: 1em;
    }

    .banner-wrapper {
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: rgba(var(--accentColor), 1);
        border-top-right-radius: inherit;
        border-top-left-radius: inherit;
        border-top: inherit;
        border-left: inherit;
        border-right: inherit;
        border-bottom: 1px solid black;
        width: 100%;
        height: 100%;
        flex: 0 1 0px;
    }

    .cards {
        width: 100%;
        height: 100%;
        display: flex;
        justify-content: space-evenly;
        align-items: center;
        flex: 1 1 0px;
        gap: 8px;
    }

    .cards:hover > .card::after {
        opacity: 1;
    }

    .card {
        background-color: var(--card-bg);
        border-radius: 10px;
        display: flex;
        height: 230px;
        width: 230px;
        flex-direction: column;
        position: relative;
        --hover-opacity: 0;
    }

    .card:hover::before {
        opacity: 1;
    }

    .card::before,
    .card::after {
        border-radius: inherit;
        content: "";
        height: 100%;
        left: 0px;
        opacity: var(--hover-opacity);
        position: absolute;
        top: 0px;
        transition: opacity 500ms;
        width: 100%;
        pointer-events: none;
    }

    .card::before {
        background: radial-gradient(400px circle at var(--mouse-x) var(--mouse-y), rgba(var(--accentColor), 0.06), transparent 40%);
        z-index: 3;
    }

    .card::after {
        background: radial-gradient(1100px circle at var(--mouse-x) var(--mouse-y), rgba(var(--accentColor), 0.5), transparent 40%);
        z-index: 1;
    }

    .card > .card-content {
        background-color: var(--card-color);
        border-radius: inherit;
        display: flex;
        flex-direction: column;
        flex-grow: 1;
        inset: 1px;
        padding: 10px;
        position: absolute;
        z-index: 2;
    }

    h1,
    h2,
    h3,
    h4 {
        color: rgb(240, 240, 240);
        font-weight: 400;
    }

    i {
        color: rgb(240, 240, 240);
    }

    .card-image {
        align-items: center;
        display: flex;
        height: 140px;
        justify-content: center;
        overflow: hidden;
    }

    .card-image > i {
        font-size: 4rem;
        opacity: 0.45;
    }
    
    .card-info-wrapper {
        align-items: center;
        display: flex;
        flex-grow: 1;
        justify-content: flex-start;
        padding: 0px 20px;
    }

    .card-info {
        align-items: flex-start;
        display: flex;
        gap: 10px;
    }

    .card-info > i {
        margin-top: 2px;
        font-size: 1rem;
    }

    .card-info-title > h3,
    .card-info-title > a {
        font-size: 1em;
        line-height: 20px;
    }

    .card-info-title > h4,
    .card-info-title > p {
        color: rgba(255, 255, 255, 0.5);
        font-size: 0.85em;
        margin-top: 8px;
    }

    .lemmy-logo {
        opacity: 0.45;
    }

    @media (max-width: 768px) {
        :root {
            --container-width: 100vw;
            --container-height: min-content;
        }

        main {
            padding-left: 0.5em;
            padding-right: 0.5em;
        }

        .cards {
            padding: 1em;
        }
    }

    @media (max-width: 480px) {
        body {
            height: unset;
            align-items: unset;
            justify-content: unset;
        }

        main {
            padding: unset;
        }

        .cards-wrapper {
            min-height: 100vh;
            border-radius: unset;
            border: unset;
            background: linear-gradient(to bottom, var(--nav-background) 40%, transparent 100%);
        }

        .cards {
            flex-direction: column;
        }

        .card {
            width: 98%;
            height: 190px;
        }

        .banner-wrapper {
            border-radius: unset;
        }

    }
</style>

<script>
    const setupCards = () => {
        const cards = document.querySelector(".cards") as HTMLDivElement;
        if (cards === null) {
            return;
        }
        const items = cards?.getElementsByClassName("card") as HTMLCollectionOf<HTMLAnchorElement>;

        cards.onmousemove = (e) => {
            for (const navitem of items) {
                const rect = navitem.getBoundingClientRect(),
                    x = e.clientX - rect.left,
                    y = e.clientY - rect.top;

                navitem.style.setProperty("--hover-opacity", "0");
                navitem.style.setProperty("--mouse-x", `${x}px`);
                navitem.style.setProperty("--mouse-y", `${y}px`);
            }
        };
    };

    document.addEventListener(
        "astro:page-load",
        (e) => {
            e.target?.removeEventListener;
            setupCards();
        },
        { once: false },
    );
</script>
